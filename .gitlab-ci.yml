stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE -t $DOCKER_IMAGE_LATEST .
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_IMAGE_LATEST
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:
  stage: deploy
  image: docker/compose:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
  script:
    - scp docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:~/oidc-validator/
    - scp src/main/resources/allowed-workspaces.yml $DEPLOY_USER@$DEPLOY_HOST:~/oidc-validator/
    - |
      ssh $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
        cd ~/oidc-validator
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        export DOCKER_IMAGE=$DOCKER_IMAGE
        docker-compose pull
        docker-compose up -d
        docker-compose ps
      EOF
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build
